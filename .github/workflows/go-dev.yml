name: Development CI

on:
  push:
    branches: [ "dev" ] # Запускаем только для ветки dev
  pull_request:
    branches: [ "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Получаем исходный код из репозитория
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Устанавливаем нужную версию Go
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.1' # Рекомендую использовать стабильную версию
          cache-dependency-path: go.sum

      # 3. Проверяем код на стиль и возможные ошибки с помощью golangci-lint
      - name: Run linter
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.5.0 # Используем актуальную версию линтера

      # 4. Запускаем юнит-тесты
      - name: Run unit tests
        run: go test -v ./...

      # 5. Собираем приложение, чтобы убедиться в отсутствии ошибок компиляции
      - name: Build application
        run: go build -v -o app ./cmd/main.go

      # 6. Проверяем Dockerfile на ошибки и лучшие практики
      - name: Run Dockerfile linter (hadolint)
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./Dockerfile # Указываем путь к вашему Dockerfile